(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{564:function(a,e,t){a.exports=t.p+"assets/img/release-assets.93b83a83.png"},621:function(a,e,t){"use strict";t.r(e);var o=t(0),n=Object(o.a)({},(function(){var a=this,e=a.$createElement,o=a._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[o("h1",{attrs:{id:"⚙️-installing-the-nibid-binary"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#⚙️-installing-the-nibid-binary"}},[a._v("#")]),a._v(" ⚙️ Installing the Nibid Binary")]),a._v(" "),o("p",{attrs:{synopsis:""}},[a._v("Instructions on building and installing the "),o("code",[a._v("nibid")]),a._v(" binary. "),o("code",[a._v("nibid")]),a._v(" is a command line client for the Nibiru blockchain. Nibiru users can use nibid to send transactions to the Nibiru network, query data from the chain, and run nodes. To install the "),o("code",[a._v("nibid")]),a._v(" binary, you can either (1) download the binary from the NibiruChain/nibiru releases page (2) or build the binary directly from the source code.")]),a._v(" "),o("h2",{attrs:{id:"install-option-1-downloading-the-binary"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#install-option-1-downloading-the-binary"}},[a._v("#")]),a._v(" Install Option 1 | Downloading the binary")]),a._v(" "),o("p",[a._v("You'll need one of the "),o("code",[a._v("darwin_")]),a._v(" binaries if you're using MacOS and one of the "),o("code",[a._v("linux_")]),a._v(" binaries if you're using something like Ubuntu or WSL.")]),a._v(" "),o("p",[a._v("To know whether you'll need the "),o("code",[a._v("amd64")]),a._v(" or "),o("code",[a._v("arm64")]),a._v(", run one of the following commands:")]),a._v(" "),o("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"ZHBrZyAtLXByaW50LWFyY2hpdGVjdHVyZQojIHJldHVybnMgJnF1b3Q7YW1kNjQmcXVvdDsgb24gVWJ1bnR1Cg=="}}),a._v(" "),o("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"dW5hbWUgLW0KIyByZXR1cm5zIHZhbHVlcyBsaWtlIHg4Nl82NCwgaTY4NiwgYXJtLCBhbmQgYWFyY2g2NAo="}}),a._v(" "),o("p",[a._v("Download the binary from the "),o("a",{attrs:{href:"https://github.com/NibiruChain/nibiru/releases",target:"_blank",rel:"noopener noreferrer"}},[a._v("NibiruChain/nibiru releases"),o("OutboundLink")],1),a._v(" page (the current testnet is "),o("code",[a._v("v0.15.0")]),a._v("). The assets are at the bottom after the release notes.")]),a._v(" "),o("p",[o("img",{attrs:{src:t(564),alt:""}})]),a._v(" "),o("p",[a._v("After downloading the tar file containing the binary, you'll need to unpack it. Here's an example command for unpacking the tar file.")]),a._v(" "),o("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"dGFyIC14dmYgbmliaXJ1X2xpbnV4X2FtZDY0LnRhci5neiAmYW1wOyZhbXA7IG12IG5pYmlydWQgbmliaWQKIyBUaGUgdGFyIGZpbGUgdW5wYWNrcyB3aXRoICZxdW90O25pYmlydWQmcXVvdDsgYXMgdGhlIGRlZmF1bHQgbmFtZSwgc28gd2UgcmVuYW1lIGl0IGhlcmUuCg=="}}),a._v(" "),o("p",[a._v("Finally, add the "),o("code",[a._v("nibid")]),a._v(" binary to your "),o("code",[a._v("$PATH")]),a._v(" with one of the methods below.")]),a._v(" "),o("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"IyBBZGQgdG8gc2hlbGwgY29uZmlnCmV4cG9ydCBQQVRIPSZsdDtwYXRoLXRvLW5pYmlkJmd0OzokUEFUSAo="}}),a._v(" "),o("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"IyBPciwgY29weSBkaXJlY3RseSB0byBhIC9iaW4gZm9sZGVyCmNwIG5pYmlkIC9iaW4vbmliaWQK"}}),a._v(" "),o("h2",{attrs:{id:"install-option-2-building-from-the-source-code"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#install-option-2-building-from-the-source-code"}},[a._v("#")]),a._v(" Install Option 2 | Building from the Source Code")]),a._v(" "),o("h3",{attrs:{id:"_2-1-install-make-and-gcc"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-install-make-and-gcc"}},[a._v("#")]),a._v(" 2.1 — Install make and gcc")]),a._v(" "),o("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"c3VkbyBhcHQtZ2V0IHVwZGF0ZQpzdWRvIGFwdC1nZXQgdXBncmFkZQpzdWRvIGFwdCBpbnN0YWxsIGdpdCBidWlsZC1lc3NlbnRpYWwgdWZ3IGN1cmwganEgc25hcGQgLS15ZXMK"}}),a._v(" "),o("h3",{attrs:{id:"_2-2-install-go"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-install-go"}},[a._v("#")]),a._v(" 2.2 — Install Go")]),a._v(" "),o("p",[a._v("The installation process for Go depends on your OS. Nibiru is meant to build with a Unix system such as MacOS, Ubuntu, or WSL. Please install Go v1.18 using the instructions at "),o("a",{attrs:{href:"https://go.dev/doc/install",target:"_blank",rel:"noopener noreferrer"}},[a._v("go.dev/doc/install"),o("OutboundLink")],1),a._v(". For Ubuntu, you can use:")]),a._v(" "),o("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"d2dldCBodHRwczovL2dvbGFuZy5vcmcvZGwvZ28xLjE4LjIubGludXgtYW1kNjQudGFyLmd6CnN1ZG8gdGFyIC1DIC91c3IvbG9jYWwgLXh6ZiBnbzEuMTguMi5saW51eC1hbWQ2NC50YXIuZ3oK"}}),a._v(" "),o("p",[a._v("You'll also want to set the following environment variables in your shell config (e.g. "),o("code",[a._v(".bashrc")]),a._v(", "),o("code",[a._v(".zshrc")]),a._v(").")]),a._v(" "),o("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"ZXhwb3J0IEdPUk9PVD0vdXNyL2xvY2FsL2dvCmV4cG9ydCBHT1BBVEg9JEhPTUUvZ28KZXhwb3J0IEdPMTExTU9EVUxFPW9uCmV4cG9ydCBQQVRIPSRQQVRIOi91c3IvbG9jYWwvZ28vYmluOiRIT01FL2dvL2Jpbgo="}}),a._v(" "),o("h3",{attrs:{id:"_2-3-compile-the-source-code"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-compile-the-source-code"}},[a._v("#")]),a._v(" 2.3 — Compile the source code")]),a._v(" "),o("p",[a._v("To build the binary from source, begin by cloning the "),o("code",[a._v("NibiruChain/nibiru")]),a._v(" repo.")]),a._v(" "),o("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"Y2QgJEhPTUUKZ2l0IGNsb25lIGh0dHBzOi8vZ2l0aHViLmNvbS9OaWJpcnVDaGFpbi9uaWJpcnUKY2QgbmliaXJ1CmdpdCBjaGVja291dCB2MC4xNS4wCm1ha2UgaW5zdGFsbAo="}}),a._v(" "),o("h2",{attrs:{id:"post-installation"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#post-installation"}},[a._v("#")]),a._v(" Post-installation")]),a._v(" "),o("p",[a._v("Running these commands should have made "),o("code",[a._v("nibid")]),a._v(" available in your "),o("code",[a._v("$PATH")]),a._v(". You should now be able to view a list of all available commands:")]),a._v(" "),o("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"bmliaWQK"}}),a._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",[a._v('If the "'),o("code",[a._v("nibid: command not found")]),a._v('" error message is returned, confirm that the Golang binary path is correctly configured by running the following command (or setting it in your shell config):')]),a._v(" "),o("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"ZXhwb3J0IFBBVEg9JFBBVEg6JChnbyBlbnYgR09QQVRIKS9iaW4K"}})],1),a._v(" "),o("hr"),a._v(" "),o("h2",{attrs:{id:"local-development"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#local-development"}},[a._v("#")]),a._v(" Local development")]),a._v(" "),o("p",[a._v("Lastly, you can run the chain for local development with")]),a._v(" "),o("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"bWFrZSBsb2NhbG5ldAo="}}),a._v(" "),o("p",[a._v("After opening another terminal, you'll be able to use the full suite of "),o("code",[a._v("nibid")]),a._v(" commands.")]),a._v(" "),o("h2",{attrs:{id:"docker-engine"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#docker-engine"}},[a._v("#")]),a._v(" Docker Engine")]),a._v(" "),o("p",[a._v("You'll need Docker to run commands that use external containers like "),o("code",[a._v("make proto-gen")]),a._v(". Instructions for installing Docker can be found "),o("a",{attrs:{href:"https://docs.docker.com/engine/install/",target:"_blank",rel:"noopener noreferrer"}},[a._v("here"),o("OutboundLink")],1),a._v(".")]),a._v(" "),o("hr"),a._v(" "),o("h2",{attrs:{id:"next-steps"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#next-steps"}},[a._v("#")]),a._v(" Next Steps")]),a._v(" "),o("h4",{attrs:{id:"learn-more-about-the-nibid-command-line-interface"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#learn-more-about-the-nibid-command-line-interface"}},[a._v("#")]),a._v(" Learn more about the "),o("RouterLink",{attrs:{to:"/dev/cli/"}},[o("code",[a._v("nibid")]),a._v(" Command-Line Interface")])],1),a._v(" "),o("h4",{attrs:{id:"setup-cosmovisor"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#setup-cosmovisor"}},[a._v("#")]),a._v(" "),o("a",{attrs:{href:"../../run-nodes/testnet/cosmovisor"}},[a._v("Setup Cosmovisor")])]),a._v(" "),o("h4",{attrs:{id:"run-a-full-node"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#run-a-full-node"}},[a._v("#")]),a._v(" Run a Full Node")]),a._v(" "),o("ul",[o("li",[o("a",{attrs:{href:"../../run-nodes/testnet"}},[a._v("Run a Full Node on Testnet")])]),a._v(" "),o("li",[o("a",{attrs:{href:"../../run-nodes/validators"}},[a._v("Setup a Validator Node")])])]),a._v(" "),o("h4",{attrs:{id:"what-s-a-node"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#what-s-a-node"}},[a._v("#")]),a._v(" "),o("a",{attrs:{href:"../../run-nodes/testnet/node-daemon"}},[a._v("What's a node?")])])],1)}),[],!1,null,null,null);e.default=n.exports}}]);